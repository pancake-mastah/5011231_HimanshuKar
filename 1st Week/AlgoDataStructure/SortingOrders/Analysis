#	Compare the performance (time complexity) of Bubble Sort and Quick Sort.
#	Discuss why Quick Sort is generally preferred over Bubble Sort.

Bubble Sort:

Best Case: O(n) 
Average Case: O(n^2) 
Worst Case: O(n^2)

Quick Sort:

Best Case: O(n log n)
Average Case: O(n log n)
Worst Case: O(n^2) 

# Discuss why Quick Sort is generally preferred over Bubble Sort.

Efficiency:
Average Performance: Quick Sort, with its average-case time complexity of O(n log n), is significantly more efficient than Bubble Sort's O(n^2) for large datasets.
Best Performance: Even in the best case, Quick Sort (O(n log n)) outperforms Bubble Sort (O(n)), especially as the size of the dataset increases.

Practical Performance:
Quick Sort typically performs faster in practical scenarios due to better cache performance and fewer swaps compared to Bubble Sort. This makes it more suitable for real-world applications.

Scalability:
Quick Sort scales much better with increasing dataset sizes. As the input size grows, the time difference between O(n log n) and O(n^2) becomes increasingly significant, making Quick Sort more appropriate for larger datasets.

Adaptability:
Quick Sort can be optimized with different pivot selection strategies (e.g., median-of-three, random pivot) to avoid the worst-case scenario. This adaptability makes it a versatile and reliable choice for various types of data.
